{"paragraphs":[{"text":"%md\n# Network Analysis with GraphX and GraphFrames","user":"anonymous","dateUpdated":"2018-03-15T21:37:13-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Network Analysis with GraphX and GraphFrames</h1>\n</div>"}]},"apps":[],"jobName":"paragraph_1521167807718_-301139906","id":"20180315-213647_864703611","dateCreated":"2018-03-15T21:36:47-0500","dateStarted":"2018-03-15T21:37:13-0500","dateFinished":"2018-03-15T21:37:13-0500","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:25158"},{"text":"%md\n# GraphX \n\n![logo](http://ampcamp.berkeley.edu/big-data-mini-course/img/graphx_logo.png)\n\nImages and tutorial material sourced from:\nhttp://ampcamp.berkeley.edu/big-data-mini-course/graph-analytics-with-graphx.html\n\nSee more about graphx at:\nhttps://spark.apache.org/graphx/","user":"anonymous","dateUpdated":"2018-03-16T07:13:36-0500","config":{"colWidth":6,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false,"title":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>GraphX</h1>\n<p><img src=\"http://ampcamp.berkeley.edu/big-data-mini-course/img/graphx_logo.png\" alt=\"logo\" /></p>\n<p>Images and tutorial material sourced from:<br/><a href=\"http://ampcamp.berkeley.edu/big-data-mini-course/graph-analytics-with-graphx.html\">http://ampcamp.berkeley.edu/big-data-mini-course/graph-analytics-with-graphx.html</a></p>\n<p>See more about graphx at:<br/><a href=\"https://spark.apache.org/graphx/\">https://spark.apache.org/graphx/</a></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1521148516464_-943914717","id":"20180315-161516_1907491867","dateCreated":"2018-03-15T16:15:16-0500","dateStarted":"2018-03-16T06:34:13-0500","dateFinished":"2018-03-16T06:34:13-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25159"},{"text":"%md\n\n### Some Background\n\nGraphX is the graph processing component built into Spark since **February 2014** (Spark 0.9). It uses the legacy RDD API, which has been with the project since the very beginning.\n\nGraphX is a component in Spark for graphs and graph-parallel computation. At a high level, GraphX extends the Spark RDD by introducing a new Graph abstraction: a directed multigraph with properties attached to each vertex and edge. GraphX includes a growing collection of graph algorithms and builders to simplify graph analytics tasks.","user":"anonymous","dateUpdated":"2018-03-16T07:13:42-0500","config":{"colWidth":6,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Some Background</h3>\n<p>GraphX is the graph processing component built into Spark since <strong>February 2014</strong> (Spark 0.9). It uses the legacy RDD API, which has been with the project since the very beginning.</p>\n<p>GraphX is a component in Spark for graphs and graph-parallel computation. At a high level, GraphX extends the Spark RDD by introducing a new Graph abstraction: a directed multigraph with properties attached to each vertex and edge. GraphX includes a growing collection of graph algorithms and builders to simplify graph analytics tasks.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1521200302119_-2087738949","id":"20180316-063822_1600375514","dateCreated":"2018-03-16T06:38:22-0500","dateStarted":"2018-03-16T06:46:45-0500","dateFinished":"2018-03-16T06:46:45-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25160"},{"text":"%md\n\n### Some Algorithms\n\n- Graph Algorithms:\n> - PageRank (find influencers)\n> - Connected Components (approximate clusters)\n> - Triangle Counting (clusters/communities)\n- Collaborative Filtering\n","user":"anonymous","dateUpdated":"2018-03-16T08:10:53-0500","config":{"colWidth":6,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Some Algorithms</h3>\n<ul>\n  <li>\n  <p>Graph Algorithms:</p>\n  <blockquote>\n    <ul>\n      <li>PageRank (find influencers)</li>\n      <li>Connected Components (approximate clusters)</li>\n      <li>Triangle Counting (clusters/communities)</li>\n    </ul>\n  </blockquote></li>\n  <li>Collaborative Filtering</li>\n</ul>\n</div>"}]},"apps":[],"jobName":"paragraph_1521202397791_1789963493","id":"20180316-071317_1041301548","dateCreated":"2018-03-16T07:13:17-0500","dateStarted":"2018-03-16T08:10:53-0500","dateFinished":"2018-03-16T08:10:53-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25161"},{"text":"%md\n","user":"anonymous","dateUpdated":"2018-03-16T06:57:45-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1521201460843_-1151434747","id":"20180316-065740_736759852","dateCreated":"2018-03-16T06:57:40-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25162"},{"text":"%md\n### Let's talk about graphs!\n\n\n![Social Graph](http://ampcamp.berkeley.edu/big-data-mini-course/img/social_graph.png)\n","user":"anonymous","dateUpdated":"2018-03-16T08:13:28-0500","config":{"colWidth":5,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false,"title":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Let&rsquo;s talk about graphs!</h3>\n<p><img src=\"http://ampcamp.berkeley.edu/big-data-mini-course/img/social_graph.png\" alt=\"Social Graph\" /></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1521151659027_1706922005","id":"20180315-170739_1861794906","dateCreated":"2018-03-15T17:07:39-0500","dateStarted":"2018-03-16T08:13:28-0500","dateFinished":"2018-03-16T08:13:28-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25163"},{"text":"%md\n","user":"anonymous","dateUpdated":"2018-03-16T08:12:51-0500","config":{"colWidth":7,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1521205960745_-1047320513","id":"20180316-081240_1109213972","dateCreated":"2018-03-16T08:12:40-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25164"},{"text":"%md\n","user":"anonymous","dateUpdated":"2018-03-16T08:12:54-0500","config":{"colWidth":1,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1521205929594_-1933058453","id":"20180316-081209_1034952847","dateCreated":"2018-03-16T08:12:09-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25165"},{"text":"%md\n","user":"anonymous","dateUpdated":"2018-03-16T06:41:32-0500","config":{"colWidth":1,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1521200478094_1906768460","id":"20180316-064118_1540313181","dateCreated":"2018-03-16T06:41:18-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25166"},{"text":"%md\n\n![newgraph](http://spark.apache.org/docs/latest/img/property_graph.png)\n","user":"anonymous","dateUpdated":"2018-03-16T06:41:13-0500","config":{"colWidth":5,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><img src=\"http://spark.apache.org/docs/latest/img/property_graph.png\" alt=\"newgraph\" /></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1521200413547_-736379863","id":"20180316-064013_647746017","dateCreated":"2018-03-16T06:40:13-0500","dateStarted":"2018-03-16T06:40:40-0500","dateFinished":"2018-03-16T06:40:40-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25167"},{"text":"%md\n","user":"anonymous","dateUpdated":"2018-03-16T07:08:02-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1521202077989_1572319854","id":"20180316-070757_1824517468","dateCreated":"2018-03-16T07:07:57-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25168"},{"text":"%md\n### First, let's install the libraries we'll need in our Spark interpreter and load in the data","user":"anonymous","dateUpdated":"2018-03-15T20:16:21-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>First, let&rsquo;s install the libraries we&rsquo;ll need in our Spark interpreter and load in the data</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1521148607761_1671562333","id":"20180315-161647_1855107803","dateCreated":"2018-03-15T16:16:47-0500","dateStarted":"2018-03-15T20:16:21-0500","dateFinished":"2018-03-15T20:16:21-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25169"},{"text":"import org.apache.spark.graphx._\nimport org.apache.spark.rdd.RDD\n\nval vertexArray = Array(\n  (1L, (\"Alice\", 28)),\n  (2L, (\"Bob\", 27)),\n  (3L, (\"Charlie\", 65)),\n  (4L, (\"David\", 42)),\n  (5L, (\"Ed\", 55)),\n  (6L, (\"Fran\", 50))\n  )\n  \nval edgeArray = Array(\n  Edge(2L, 1L, 7),\n  Edge(2L, 4L, 2),\n  Edge(3L, 2L, 4),\n  Edge(3L, 6L, 3),\n  Edge(4L, 1L, 1),\n  Edge(5L, 2L, 2),\n  Edge(5L, 3L, 8),\n  Edge(5L, 6L, 3)\n  )\n","user":"anonymous","dateUpdated":"2018-03-15T21:27:30-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","editorHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.graphx._\nimport org.apache.spark.rdd.RDD\nvertexArray: Array[(Long, (String, Int))] = Array((1,(Alice,28)), (2,(Bob,27)), (3,(Charlie,65)), (4,(David,42)), (5,(Ed,55)), (6,(Fran,50)))\nedgeArray: Array[org.apache.spark.graphx.Edge[Int]] = Array(Edge(2,1,7), Edge(2,4,2), Edge(3,2,4), Edge(3,6,3), Edge(4,1,1), Edge(5,2,2), Edge(5,3,8), Edge(5,6,3))\n"}]},"apps":[],"jobName":"paragraph_1521148555599_-210906766","id":"20180315-161555_309352162","dateCreated":"2018-03-15T16:15:55-0500","dateStarted":"2018-03-15T20:39:27-0500","dateFinished":"2018-03-15T20:39:29-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25170"},{"text":"val vertexRDD: RDD[(Long, (String, Int))] = sc.parallelize(vertexArray)\nval edgeRDD: RDD[Edge[Int]] = sc.parallelize(edgeArray)","user":"anonymous","dateUpdated":"2018-03-15T20:39:31-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"vertexRDD: org.apache.spark.rdd.RDD[(Long, (String, Int))] = ParallelCollectionRDD[0] at parallelize at <console>:39\nedgeRDD: org.apache.spark.rdd.RDD[org.apache.spark.graphx.Edge[Int]] = ParallelCollectionRDD[1] at parallelize at <console>:39\n"}]},"apps":[],"jobName":"paragraph_1521149246609_-1629462281","id":"20180315-162726_1147013161","dateCreated":"2018-03-15T16:27:26-0500","dateStarted":"2018-03-15T20:39:31-0500","dateFinished":"2018-03-15T20:39:32-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25171"},{"text":"val graph: Graph[(String, Int), Int] = Graph(vertexRDD, edgeRDD)","user":"anonymous","dateUpdated":"2018-03-15T20:39:38-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"graph: org.apache.spark.graphx.Graph[(String, Int),Int] = org.apache.spark.graphx.impl.GraphImpl@7d19225c\n"}]},"apps":[],"jobName":"paragraph_1521149386848_1347349826","id":"20180315-162946_272153150","dateCreated":"2018-03-15T16:29:46-0500","dateStarted":"2018-03-15T20:39:38-0500","dateFinished":"2018-03-15T20:39:39-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25172"},{"text":"%md\n","user":"anonymous","dateUpdated":"2018-03-16T07:09:03-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1521202133536_801545213","id":"20180316-070853_996574554","dateCreated":"2018-03-16T07:08:53-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25173"},{"text":"%md\n","user":"anonymous","dateUpdated":"2018-03-16T07:08:30-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1521202088924_-948170191","id":"20180316-070808_573350257","dateCreated":"2018-03-16T07:08:08-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25174"},{"text":"%md \n### Now that we have our graph, we can do some computations on our PEOPLE (vertices) and see WHO LIKES WHO (triplets)","user":"anonymous","dateUpdated":"2018-03-15T20:16:21-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Now that we have our graph, we can do some computations on our PEOPLE (vertices) and see WHO LIKES WHO (triplets)</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1521150753574_-414481094","id":"20180315-165233_698406210","dateCreated":"2018-03-15T16:52:33-0500","dateStarted":"2018-03-15T20:16:21-0500","dateFinished":"2018-03-15T20:16:21-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25175"},{"text":"%md\n\n![Graph Components](http://ampcamp.berkeley.edu/big-data-mini-course/img/triplet.png)","user":"anonymous","dateUpdated":"2018-03-15T20:16:21-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><img src=\"http://ampcamp.berkeley.edu/big-data-mini-course/img/triplet.png\" alt=\"Graph Components\" /></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1521152183628_1913867652","id":"20180315-171623_627200871","dateCreated":"2018-03-15T17:16:23-0500","dateStarted":"2018-03-15T20:16:21-0500","dateFinished":"2018-03-15T20:16:21-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25176"},{"title":"People","text":"%md\n![The Gang](https://nerdist.com/wp-content/uploads/2014/12/parks-and-rec-cast.jpg)\n","user":"anonymous","dateUpdated":"2018-03-15T20:16:21-0500","config":{"colWidth":4,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><img src=\"https://nerdist.com/wp-content/uploads/2014/12/parks-and-rec-cast.jpg\" alt=\"The Gang\" /></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1521153193443_-1140792904","id":"20180315-173313_307896273","dateCreated":"2018-03-15T17:33:13-0500","dateStarted":"2018-03-15T20:16:21-0500","dateFinished":"2018-03-15T20:16:21-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25177"},{"text":"%md\n","user":"anonymous","dateUpdated":"2018-03-15T20:16:21-0500","config":{"colWidth":1,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1521153349200_-113499661","id":"20180315-173549_1118581257","dateCreated":"2018-03-15T17:35:49-0500","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25178"},{"title":"Relationships","text":"%md\n\n![Heart](http://cdn.shopify.com/s/files/1/1061/1924/products/Sparkling_Pink_Heart_Emoji_grande.png?v=1480481032)\n","user":"anonymous","dateUpdated":"2018-03-15T20:16:21-0500","config":{"colWidth":2,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><img src=\"http://cdn.shopify.com/s/files/1/1061/1924/products/Sparkling_Pink_Heart_Emoji_grande.png?v=1480481032\" alt=\"Heart\" /></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1521153240553_-334515741","id":"20180315-173400_1043781366","dateCreated":"2018-03-15T17:34:00-0500","dateStarted":"2018-03-15T20:16:21-0500","dateFinished":"2018-03-15T20:16:21-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25179"},{"text":"%md\n","user":"anonymous","dateUpdated":"2018-03-15T20:16:21-0500","config":{"colWidth":1,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1521153557955_-1161653067","id":"20180315-173917_510805054","dateCreated":"2018-03-15T17:39:17-0500","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25180"},{"title":"Peeps in Relationships","text":"%md\n\n![Ron](https://static.tumblr.com/74710d34bdb6eb14218ff92fb7590680/ngo5tig/oNensp1kt/tumblr_static_tumblr_static_ezucaprre9cswg000kc8c804s_640.gif)\n","user":"anonymous","dateUpdated":"2018-03-15T20:16:22-0500","config":{"colWidth":4,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><img src=\"https://static.tumblr.com/74710d34bdb6eb14218ff92fb7590680/ngo5tig/oNensp1kt/tumblr_static_tumblr_static_ezucaprre9cswg000kc8c804s_640.gif\" alt=\"Ron\" /></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1521159809624_1739164448","id":"20180315-192329_1551485905","dateCreated":"2018-03-15T19:23:29-0500","dateStarted":"2018-03-15T20:16:22-0500","dateFinished":"2018-03-15T20:16:22-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25181"},{"text":"%md\n","user":"anonymous","dateUpdated":"2018-03-16T07:08:38-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1521202116304_1671447152","id":"20180316-070836_1208031307","dateCreated":"2018-03-16T07:08:36-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25182"},{"text":"%md\n### People Computations","user":"anonymous","dateUpdated":"2018-03-16T07:09:33-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>People Computations</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1521202124248_-1188006673","id":"20180316-070844_1812762109","dateCreated":"2018-03-16T07:08:44-0500","dateStarted":"2018-03-16T07:09:33-0500","dateFinished":"2018-03-16T07:09:33-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25183"},{"text":"%md\n#### Let's find the vertices that represent people older than 30","user":"anonymous","dateUpdated":"2018-03-15T20:16:22-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>Let&rsquo;s find the vertices that represent people older than 30</h4>\n</div>"}]},"apps":[],"jobName":"paragraph_1521150803325_819686108","id":"20180315-165323_448065743","dateCreated":"2018-03-15T16:53:23-0500","dateStarted":"2018-03-15T20:16:22-0500","dateFinished":"2018-03-15T20:16:22-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25184"},{"text":"graph.vertices.filter { case (id, (name, age)) => age > 30 }.collect.foreach {\n  case (id, (name, age)) => println(s\"$name is $age\")\n}","user":"anonymous","dateUpdated":"2018-03-15T20:16:23-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"David is 42\nEd is 55\nFran is 50\nCharlie is 65\n"}]},"apps":[],"jobName":"paragraph_1521149903532_220740461","id":"20180315-163823_1925942105","dateCreated":"2018-03-15T16:38:23-0500","dateStarted":"2018-03-15T20:16:23-0500","dateFinished":"2018-03-15T20:16:24-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25185"},{"text":"for ((id,(name,age)) <- graph.vertices.filter { case (id,(name,age)) => age > 30 }.collect) {\n  println(s\"$name is $age\")\n    \n}","user":"anonymous","dateUpdated":"2018-03-15T20:16:24-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"David is 42\nEd is 55\nFran is 50\nCharlie is 65\n"}]},"apps":[],"jobName":"paragraph_1521150579190_-319861869","id":"20180315-164939_536704263","dateCreated":"2018-03-15T16:49:39-0500","dateStarted":"2018-03-15T20:16:24-0500","dateFinished":"2018-03-15T20:16:24-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25186"},{"text":"%md\n### Triplet Computations","user":"anonymous","dateUpdated":"2018-03-16T07:09:49-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Triplet Computations</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1521202179202_544810428","id":"20180316-070939_1161676156","dateCreated":"2018-03-16T07:09:39-0500","dateStarted":"2018-03-16T07:09:49-0500","dateFinished":"2018-03-16T07:09:49-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25187"},{"text":"%md \n#### We can also do computations on the edges to find relationships between our people\n(So, who has liked who at least one time)","user":"anonymous","dateUpdated":"2018-03-15T20:16:22-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>We can also do computations on the edges to find relationships between our people</h4>\n<p>(So, who has liked who at least one time)</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1521150905909_-14144668","id":"20180315-165505_1575280905","dateCreated":"2018-03-15T16:55:05-0500","dateStarted":"2018-03-15T20:16:22-0500","dateFinished":"2018-03-15T20:16:22-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25188"},{"text":"for (triplet <- graph.triplets.collect) {\n  println(s\"${triplet.srcAttr._1} likes ${triplet.dstAttr._1}\")\n}","user":"anonymous","dateUpdated":"2018-03-15T20:16:24-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":true},"editorMode":"ace/mode/scala","editorHide":false,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Bob likes Alice\nBob likes David\nCharlie likes Bob\nCharlie likes Fran\nDavid likes Alice\nEd likes Bob\nEd likes Charlie\nEd likes Fran\n"}]},"apps":[],"jobName":"paragraph_1521150941506_1403132362","id":"20180315-165541_866019304","dateCreated":"2018-03-15T16:55:41-0500","dateStarted":"2018-03-15T20:16:24-0500","dateFinished":"2018-03-15T20:16:25-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25189"},{"text":"%md \n#### If we really want to creep, we can find people who have 'liked' someone more than 5 times... which we'll call 'love' below","user":"anonymous","dateUpdated":"2018-03-16T08:55:00-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h4>If we really want to creep, we can find people who have &lsquo;liked&rsquo; someone more than 5 times&hellip; which we&rsquo;ll call &lsquo;love&rsquo; below</h4>\n</div>"}]},"apps":[],"jobName":"paragraph_1521151034907_-1900367667","id":"20180315-165714_641592195","dateCreated":"2018-03-15T16:57:14-0500","dateStarted":"2018-03-16T08:55:00-0500","dateFinished":"2018-03-16T08:55:00-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25190"},{"text":"for (triplet <- graph.triplets.filter(t => t.attr > 5).collect) {\n  println(s\"${triplet.srcAttr._1} loves ${triplet.dstAttr._1}\")\n}","user":"anonymous","dateUpdated":"2018-03-15T20:16:25-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Bob loves Alice\nEd loves Charlie\n"}]},"apps":[],"jobName":"paragraph_1521151008972_-427194777","id":"20180315-165648_347601409","dateCreated":"2018-03-15T16:56:48-0500","dateStarted":"2018-03-15T20:16:25-0500","dateFinished":"2018-03-15T20:16:25-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25191"},{"text":"%md\n![image](https://onceblindstudios.com/wp-content/uploads/obs_BLOG_POST_new_improved2-01.jpg)","user":"anonymous","dateUpdated":"2018-03-16T07:11:18-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><img src=\"https://onceblindstudios.com/wp-content/uploads/obs_BLOG_POST_new_improved2-01.jpg\" alt=\"image\" /></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1521202220393_1973444390","id":"20180316-071020_60858779","dateCreated":"2018-03-16T07:10:20-0500","dateStarted":"2018-03-16T07:11:18-0500","dateFinished":"2018-03-16T07:11:18-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25192"},{"text":"%md\n# GraphFrames\n#### *GraphX is to RDDs as GraphFrames are to DataFrames.* \nSee more at:\nhttps://graphframes.github.io/index.html\n\n\n### Graph computations now Python compatible!!","user":"anonymous","dateUpdated":"2018-03-16T08:11:54-0500","config":{"colWidth":6,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>GraphFrames</h1>\n<h4><em>GraphX is to RDDs as GraphFrames are to DataFrames.</em></h4>\n<p>See more at:<br/><a href=\"https://graphframes.github.io/index.html\">https://graphframes.github.io/index.html</a></p>\n<h3>Graph computations now Python compatible!!</h3>\n</div>"}]},"apps":[],"jobName":"paragraph_1521147565900_929307849","id":"20180315-155925_490208894","dateCreated":"2018-03-15T15:59:25-0500","dateStarted":"2018-03-16T08:11:54-0500","dateFinished":"2018-03-16T08:11:54-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25193"},{"title":"GraphX but Better!!","text":"%md\n\n![tom](http://78.media.tumblr.com/00a7156e36e29ebb9e9b29b89aca25ef/tumblr_murz18ykHS1qa3emao6_250.gif)","user":"anonymous","dateUpdated":"2018-03-16T06:57:02-0500","config":{"colWidth":5,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<p><img src=\"http://78.media.tumblr.com/00a7156e36e29ebb9e9b29b89aca25ef/tumblr_murz18ykHS1qa3emao6_250.gif\" alt=\"tom\" /></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1521201369822_1695232065","id":"20180316-065609_725598927","dateCreated":"2018-03-16T06:56:09-0500","dateStarted":"2018-03-16T06:57:01-0500","dateFinished":"2018-03-16T06:57:01-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25194"},{"text":"%md\n\n### Some Background\n\nGraphFrames is a new graph processing library based on GraphX. It is a separate package released in **2016**. It uses the DataFrame API, which has several significant advantages:\n\nFirst, the API is also **uniform across Scala, Java and Python**, which is not the case for GraphX.\n\nSecond, the API in **GraphFrames allows users to express their computations in terms of queries**. For many users this is a more intuitive way to reason about their data.\n\nThird, **GraphFrames integrate nicely with the DataFrame** data sources API. This allows the user to read or write files describing their graphs in json, csv, parquet and many other formats.\n\n> The only reason why GraphFrames didn't just replace GraphX was to maintain legacy API compatibility, but that's about it. If you’re integrating with legacy code, you can always convert your GraphFrames graph back into a GraphX graph, but not the other way round.\n\n(source: https://www.quora.com/What-is-the-difference-between-GraphFrames-and-GraphX-in-Spark)","user":"anonymous","dateUpdated":"2018-03-16T09:53:42-0500","config":{"colWidth":10,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Some Background</h3>\n<p>GraphFrames is a new graph processing library based on GraphX. It is a separate package released in <strong>2016</strong>. It uses the DataFrame API, which has several significant advantages:</p>\n<p>First, the API is also <strong>uniform across Scala, Java and Python</strong>, which is not the case for GraphX.</p>\n<p>Second, the API in <strong>GraphFrames allows users to express their computations in terms of queries</strong>. For many users this is a more intuitive way to reason about their data.</p>\n<p>Third, <strong>GraphFrames integrate nicely with the DataFrame</strong> data sources API. This allows the user to read or write files describing their graphs in json, csv, parquet and many other formats.</p>\n<blockquote>\n  <p>The only reason why GraphFrames didn&rsquo;t just replace GraphX was to maintain legacy API compatibility, but that&rsquo;s about it. If you’re integrating with legacy code, you can always convert your GraphFrames graph back into a GraphX graph, but not the other way round.</p>\n</blockquote>\n<p>(source: <a href=\"https://www.quora.com/What-is-the-difference-between-GraphFrames-and-GraphX-in-Spark\">https://www.quora.com/What-is-the-difference-between-GraphFrames-and-GraphX-in-Spark</a>)</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1521200886462_1874066971","id":"20180316-064806_1412897175","dateCreated":"2018-03-16T06:48:06-0500","dateStarted":"2018-03-16T09:53:42-0500","dateFinished":"2018-03-16T09:53:42-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25195"},{"title":"Graph FRAMES","text":"%pyspark\nimport graphframes\n\n# Vertex DataFrame\nv = sqlContext.createDataFrame([\n  (\"a\", \"Alice\", 34),\n  (\"b\", \"Bob\", 36),\n  (\"c\", \"Charlie\", 30),\n  (\"d\", \"David\", 29),\n  (\"e\", \"Esther\", 32),\n  (\"f\", \"Fanny\", 36)\n], [\"id\", \"name\", \"age\"])\n\n# Edge DataFrame\ne = sqlContext.createDataFrame([\n  (\"a\", \"b\", \"friend\"),\n  (\"b\", \"c\", \"follow\"),\n  (\"c\", \"b\", \"follow\"),\n  (\"f\", \"c\", \"follow\"),\n  (\"e\", \"f\", \"follow\"),\n  (\"e\", \"d\", \"friend\"),\n  (\"d\", \"a\", \"friend\"),\n  (\"a\", \"e\", \"friend\")\n], [\"src\", \"dst\", \"relationship\"])\n\n# Create a GraphFrame\ng = GraphFrame(v, e)","user":"anonymous","dateUpdated":"2018-03-16T10:17:40-0500","config":{"colWidth":5,"enabled":true,"results":{},"editorSetting":{"language":"python","editOnDblClick":false},"editorMode":"ace/mode/python","tableHide":true,"editorHide":false,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"ERROR","msg":[{"type":"TEXT","data":"Traceback (most recent call last):\n  File \"/var/folders/_7/yrvnfhsn1mq66yn3wfv1qq8c0000gn/T/zeppelin_pyspark-7938405540496511772.py\", line 355, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nImportError: No module named 'graphframes'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/var/folders/_7/yrvnfhsn1mq66yn3wfv1qq8c0000gn/T/zeppelin_pyspark-7938405540496511772.py\", line 367, in <module>\n    raise Exception(traceback.format_exc())\nException: Traceback (most recent call last):\n  File \"/var/folders/_7/yrvnfhsn1mq66yn3wfv1qq8c0000gn/T/zeppelin_pyspark-7938405540496511772.py\", line 355, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 1, in <module>\nImportError: No module named 'graphframes'\n\n"}]},"apps":[],"jobName":"paragraph_1521146465556_-1903003949","id":"20180315-154105_1592057905","dateCreated":"2018-03-15T15:41:05-0500","dateStarted":"2018-03-15T20:16:25-0500","dateFinished":"2018-03-15T20:16:25-0500","status":"ERROR","progressUpdateIntervalMs":500,"$$hashKey":"object:25196"},{"title":"GraphX","text":"import org.apache.spark.graphx._\nimport org.apache.spark.rdd.RDD\n\n// Vertex Array\nval vertexArray = Array(\n  (1L, (\"Alice\", 28)),\n  (2L, (\"Bob\", 27)),\n  (3L, (\"Charlie\", 65)),\n  (4L, (\"David\", 42)),\n  (5L, (\"Ed\", 55)),\n  (6L, (\"Fran\", 50))\n  )\n  \n// Edge Array\nval edgeArray = Array(\n  Edge(2L, 1L, 7),\n  Edge(2L, 4L, 2),\n  Edge(3L, 2L, 4),\n  Edge(3L, 6L, 3),\n  Edge(4L, 1L, 1),\n  Edge(5L, 2L, 2),\n  Edge(5L, 3L, 8),\n  Edge(5L, 6L, 3)\n  )\n\n// Convert Arrays to RDD\nval vertexRDD: RDD[(Long, (String, Int))] = sc.parallelize(vertexArray)\nval edgeRDD: RDD[Edge[Int]] = sc.parallelize(edgeArray)\n\n// Convert RDD to Graph\nval graph: Graph[(String, Int), Int] = Graph(vertexRDD, edgeRDD)","user":"anonymous","dateUpdated":"2018-03-16T07:01:14-0500","config":{"colWidth":7,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","tableHide":true,"title":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.apache.spark.graphx._\nimport org.apache.spark.rdd.RDD\nvertexArray: Array[(Long, (String, Int))] = Array((1,(Alice,28)), (2,(Bob,27)), (3,(Charlie,65)), (4,(David,42)), (5,(Ed,55)), (6,(Fran,50)))\nedgeArray: Array[org.apache.spark.graphx.Edge[Int]] = Array(Edge(2,1,7), Edge(2,4,2), Edge(3,2,4), Edge(3,6,3), Edge(4,1,1), Edge(5,2,2), Edge(5,3,8), Edge(5,6,3))\nvertexRDD: org.apache.spark.rdd.RDD[(Long, (String, Int))] = ParallelCollectionRDD[14] at parallelize at <console>:114\nedgeRDD: org.apache.spark.rdd.RDD[org.apache.spark.graphx.Edge[Int]] = ParallelCollectionRDD[15] at parallelize at <console>:112\ngraph: org.apache.spark.graphx.Graph[(String, Int),Int] = org.apache.spark.graphx.impl.GraphImpl@25e09e06\n"}]},"apps":[],"jobName":"paragraph_1521201491645_-1584231287","id":"20180316-065811_469176588","dateCreated":"2018-03-16T06:58:11-0500","dateStarted":"2018-03-16T07:00:32-0500","dateFinished":"2018-03-16T07:00:35-0500","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25197"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2018-03-15T20:16:22-0500","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1521148234930_1244938744","id":"20180315-161034_1137790166","dateCreated":"2018-03-15T16:10:34-0500","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25204"}],"name":"Graph Computations","id":"2D87V8BRS","angularObjects":{"2D7YV1PEA:shared_process":[],"2D9PQ16C6:shared_process":[],"2D8N4STAR:shared_process":[],"2DAYMYWDM:shared_process":[],"2DB1MKBDG:shared_process":[],"2DBH3N1DP:shared_process":[],"2D8XZ6NG7:shared_process":[],"2DACHU8FJ:shared_process":[],"2DA7C9KPP:shared_process":[],"2DBD4AVP6:shared_process":[],"2D8TZ1KU9:shared_process":[],"2D9BGU11W:shared_process":[],"2DADCJJTM:shared_process":[],"2DBHMHNCU:shared_process":[],"2D92H9PHQ:shared_process":[],"2DA19Q9VY:shared_process":[],"2D9D1KJ8V:shared_process":[],"2D9GE3ZZQ:shared_process":[],"2DA8PZT5E:shared_process":[]},"config":{"looknfeel":"simple","personalizedMode":"false"},"info":{}}